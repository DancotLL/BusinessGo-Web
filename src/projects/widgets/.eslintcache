[{"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/index.js":"1","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/index.js":"2","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/constants.js":"3","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/utils.js":"4","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/services/chatbot_api/web_message.js":"5","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/MessageBubbles/index.js":"6","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/Header/index.js":"7","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/Input/index.js":"8","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/Avatar/index.js":"9","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/FAQ/index.js":"10","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/FAQButton/index.js":"11","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/utils/axios.js":"12","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/sockets/chatbot/index.js":"13","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/index.js":"14","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/reducers/index.js":"15","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/reducers/project.js":"16","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/services/api/project.js":"17","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/constants.js":"18","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/utils/query.js":"19","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/actions/project.js":"20"},{"size":357,"mtime":1613883256172,"results":"21","hashOfConfig":"22"},{"size":4185,"mtime":1613888538315,"results":"23","hashOfConfig":"22"},{"size":128,"mtime":1613875983150,"results":"24","hashOfConfig":"22"},{"size":322,"mtime":1613878010954,"results":"25","hashOfConfig":"22"},{"size":380,"mtime":1613864927933,"results":"26","hashOfConfig":"22"},{"size":4919,"mtime":1613881185554,"results":"27","hashOfConfig":"22"},{"size":1745,"mtime":1613879759478,"results":"28","hashOfConfig":"22"},{"size":1486,"mtime":1613865235104,"results":"29","hashOfConfig":"22"},{"size":1481,"mtime":1613880022289,"results":"30","hashOfConfig":"22"},{"size":2458,"mtime":1613880319955,"results":"31","hashOfConfig":"22"},{"size":1458,"mtime":1613880506710,"results":"32","hashOfConfig":"22"},{"size":236,"mtime":1613864873281,"results":"33","hashOfConfig":"22"},{"size":783,"mtime":1613864917221,"results":"34","hashOfConfig":"22"},{"size":146,"mtime":1613874783803,"results":"35","hashOfConfig":"22"},{"size":92,"mtime":1613874328319,"results":"36","hashOfConfig":"22"},{"size":334,"mtime":1613874277320,"results":"37","hashOfConfig":"22"},{"size":565,"mtime":1613876214696,"results":"38","hashOfConfig":"22"},{"size":39,"mtime":1613875987290,"results":"39","hashOfConfig":"40"},{"size":90,"mtime":1613876589875,"results":"41","hashOfConfig":"22"},{"size":162,"mtime":1613877151905,"results":"42","hashOfConfig":"22"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ibitjp",{"filePath":"45","messages":"46","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"gwbrcz",{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/index.js",["86","87"],"import { v4 as uuid } from 'uuid';\r\nimport { useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport MessageBubbles from '../MessageBubbles';\r\nimport { conversation_id } from './constants';\r\nimport { createWebMessage } from '../../services/chatbot_api/web_message';\r\nimport { setProject } from '../../store/actions/project';\r\nimport { showProject } from '../../services/api/project';\r\nimport { getQueryParam } from '../../utils/query';\r\n\r\nimport Header from './Header';\r\nimport Input from './Input';\r\nimport Avatar from './Avatar';\r\nimport FAQ from './FAQ';\r\nimport FAQButton from './FAQButton';\r\nimport { shouldRender } from './utils';\r\nimport * as constants from './constants';\r\n\r\nconst classes = {\r\n  chatbot: `chatbot-${uuid()}`\r\n};\r\n\r\nconst Chatbot = () => {\r\n  const dispatch = useDispatch();\r\n  const project = useSelector(store => store.project);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const render = shouldRender(project);\r\n  const [messages, setMessages] = useState([]);\r\n  const [textInput, setTextInput] = useState(null);\r\n  const [waiting, setWaiting] = useState(false);\r\n  const [showFaq, setShowFaq] = useState(true);\r\n  const messagesRef = useRef();\r\n  messagesRef.current = messages;\r\n\r\n  const handleAddMessages = newMessages => {\r\n    setMessages([...messagesRef.current, ...newMessages]);\r\n  };\r\n\r\n  const handleFocusInput = () => {\r\n    textInput.current.focus();\r\n  };\r\n\r\n  const handleInput = text => {\r\n    if (waiting) return;\r\n    const message = {\r\n      conversation_id,\r\n      channel: 'web',\r\n      from: 'user',\r\n      type: 'text',\r\n      text\r\n    };\r\n\r\n    setWaiting(true);\r\n    textInput.current.value = text;\r\n    createWebMessage(project, message, true).then(() => {\r\n      setWaiting(false);\r\n      textInput.current.focus();\r\n      textInput.current.value = '';\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!project?.chatbot?.configuration) return;\r\n    setMessages([{ from: 'bot', type: 'text', text: project.chatbot.configuration.web.greeting }]);\r\n  }, [project]);\r\n\r\n  useEffect(() => {\r\n    showProject(window.__WEBUILDWEBZ_DATA.projectCode).then(givenProject => {\r\n      dispatch(setProject(givenProject));\r\n    });\r\n  }, [setProject]);\r\n\r\n  if (!render) return <div />;\r\n\r\n  return (\r\n    <div onKeyPress={handleFocusInput} tabIndex={0}>\r\n      <Avatar show={!isOpen} onClick={() => setIsOpen(true)} />\r\n      <FAQ show={isOpen && showFaq} onQuestion={handleInput} onClose={() => setShowFaq(false)} />\r\n      <FAQButton\r\n        text={project.chatbot.configuration.web.faq_title}\r\n        show={isOpen && !showFaq}\r\n        onClick={() => setShowFaq(true)}\r\n      />\r\n      <div className={classes.chatbot}>\r\n        <Header title={project.chatbot.configuration.web.title} onClose={() => setIsOpen(false)} />\r\n        <MessageBubbles\r\n          messages={messages}\r\n          me=\"user\"\r\n          height={`calc(100% - ${project.chatbot.configuration.web.header_size || 50}px - 44px)`}\r\n        />\r\n        <Input\r\n          onMessages={handleAddMessages}\r\n          onInputRef={setTextInput}\r\n          onInput={handleInput}\r\n          waiting={waiting}\r\n        />\r\n      </div>\r\n      <style jsx>\r\n        {`\r\n          .${classes.chatbot} {\r\n            position: fixed;\r\n            transform: translate(-100%, -100%);\r\n            left: calc(100% - 50px);\r\n            top: calc(100% - 23px);\r\n            width: ${constants.WIDTH}px;\r\n            height: ${constants.HEIGHT}px;\r\n            ${isOpen\r\n              ? ''\r\n              : `\r\n                opacity: 0;\r\n                width: 0;\r\n                height: 0;\r\n            `}\r\n            background-color: white;\r\n            border-radius: 10px;\r\n            box-shadow: 0 7px 30px 1px rgb(190, 179, 179);\r\n            z-index: 999;\r\n            transition: 0.7s;\r\n          }\r\n          @media only screen and (max-width: 768px) {\r\n            .${classes.chatbot} {\r\n              transform: translate(0, -100%);\r\n              width: 96%;\r\n              left: 2%;\r\n              top: 100%;\r\n            }\r\n          }\r\n        `}\r\n      </style>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/constants.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/utils.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/services/chatbot_api/web_message.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/MessageBubbles/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/Header/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/Input/index.js",["88"],"import { useEffect, useRef,  } from 'react';\r\nimport { TextField } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { socket } from '../../../sockets/chatbot';\r\n\r\nconst Input = props => {\r\n  const project = useSelector(store => store.project);\r\n  const textInput = useRef();\r\n\r\n  const handleKeyPress = ({ target, charCode }) => {\r\n    const value = target.value.trim();\r\n    if (charCode !== 13 || !value) return;\r\n    props.onInput(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    props.onInputRef(textInput);\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    if (!socket) return;\r\n\r\n    const onNewMessages = messages => {\r\n      props.onMessages(messages);\r\n    };\r\n\r\n    socket.on('new_messages', onNewMessages);\r\n    return () => socket.off('new_messages', onNewMessages);\r\n  }, [socket]);\r\n\r\n  return (\r\n    <TextField\r\n      inputRef={textInput}\r\n      autoFocus\r\n      label={project.chatbot.configuration.web.placeholder}\r\n      variant=\"outlined\"\r\n      onKeyPress={handleKeyPress}\r\n      size=\"small\"\r\n      disabled={props.waiting}\r\n      style={{ position: 'absolute', bottom: 0, width: '100%', overflowX: 'unset' }}\r\n    />\r\n  );\r\n};\r\n\r\nInput.propTypes = {\r\n  onMessages: PropTypes.func,\r\n  onInputRef: PropTypes.func,\r\n  onInput: PropTypes.func,\r\n  waiting: PropTypes.bool.isRequired\r\n};\r\n\r\nInput.defaultProps = {\r\n  onMessages: () => {},\r\n  onInputRef: () => {},\r\n  onInput: () => {}\r\n};\r\n\r\nexport default Input;\r\n","/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/Avatar/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/FAQ/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/components/Chatbot/FAQButton/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/utils/axios.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/sockets/chatbot/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/reducers/index.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/reducers/project.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/services/api/project.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/constants.js",[],["89","90"],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/utils/query.js",[],"/home/leandro/Documents/Workspaces/DancotLL/BusinessGo-Web/src/projects/widgets/src/store/actions/project.js",[],{"ruleId":"91","severity":1,"message":"92","line":10,"column":10,"nodeType":"93","messageId":"94","endLine":10,"endColumn":23},{"ruleId":"95","severity":1,"message":"96","line":72,"column":6,"nodeType":"97","endLine":72,"endColumn":18,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":31,"column":6,"nodeType":"97","endLine":31,"endColumn":14,"suggestions":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},"no-unused-vars","'getQueryParam' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'setProject' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. Outer scope values like 'socket' aren't valid dependencies because mutating them doesn't re-render the component.",["106"],"no-native-reassign",["107"],"no-negated-in-lhs",["108"],{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch]",{"range":"113","text":"114"},"Update the dependencies array to be: [props]",{"range":"115","text":"116"},[2237,2249],"[dispatch]",[840,848],"[props]"]